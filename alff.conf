<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE alff_config SYSTEM "/usr/share/alff/alff_config.dtd">

<alff_config>
	<!-- Global alff options //-->
	<options>
		<!-- Specify the type of this firewall.
		 This system can by run on a bridging firewall which is bridging a trunk 
		 with 802.1Q-Vlans (e.g. when using Cisco[tm]) or as a routing firewall.
		 The keywords are "bridge" and "router".
		 The bridge mode is not really tested and working for now, be warned. //-->
		<fw_type> router </fw_type>

		<!-- Allow ICMP traffic in general?
		 This option controls if all ICMP packets will be able to pass the firewall in general.
		 Be warned: You will get into trouble if you block all ICMP traffic...
		 The default value is yes. //-->
		<allow_icmp> yes </allow_icmp>

		<!-- Allow udp traceroute in general?
		 Allow traceroute (udp packets to ports 33434 - 33523) to pass the firewall.
		 This does not have any influence on traceroute using ICMP packets.
		 The default is yes. //-->
	    <allow_traceroute_udp> yes </allow_traceroute_udp>

		<!-- Allow multicast connections?
		 Decide if you want to allow multicast connections to be allowed.
		 Beware that you have to set up your firewall to be able to do so by your own,
		  if your firewall is a router. In bridge mode it does just work[tm].
		 The default is yes. //-->
	    <allow_multicast> yes </allow_multicast>

		<!-- Netfilter conntrack helper to load
		 Specify a space separated list of protocols to load conntrack helper for. //-->
<!--	    <conntrack_helper_mod> ftp irc tftp </conntrack_helper_mod> //-->

		<!-- The default policy for alff created chains.
		 Valid values are ACCEPT, DROP, REJECT, LOG or a self defined chain, which has to be created in chains.d rather soon.
		 The default is REJECT.
		//-->
	    <default_chain_policy> REJECT </default_chain_policy>

		<!-- Your DHCP server(s)
		 Provice a space separated list of the IPs of your DHCP server in your network.
		 Connections from udp port 67 to $server:68/udp and vice versa will be allowed.
		 //-->
<!--	    <dhcp_server> 192.168.42.1  </dhcp_server> //-->

		<!-- By default ALFF will generate a script with iptables rules which contains the generates rules.
		 If you want ALFF to load the rules on this maschine after generating, say yes. //-->
		<activate_ruleset_local> no </activate_ruleset_local>
  </options>

  <!--
	 The Networks/Vlans alff should know of.. 
  //-->

	<!-- external networks //-->
<!--	<vlan>
		<id> ISP  </id>
		<desc> my ISP network </desc>
		<network> 123.234.42.0/22 </network>
		<network> 123.234.112.0/20 </network>
		<interface> ppp0 </interface>
	</vlan>
//-->

  <!-- internal networks //--> 
<!--	<vlan>
		<id> 42 </id>
		<network> 192.168.42.0/24 </network>
		<desc> my Home network </desc>
		<interface> eth0 </interface>
		<filtered> yes </filtered>
		<trusted> yes </trusted>
	</vlan>
//-->

<!--	<vlan>
		<id> 23 </id>
		<network> 192.168.23.0/23 </network>
		<desc> my hacking lab network </desc>
		<filtered> yes </filtered>
	</vlan>
//-->

</alff_config>
<!-- vim:ft=xml:ts=4
 //-->
