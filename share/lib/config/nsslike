#!/usr/bin/env sh
#
# /usr/share/fwrbm/config.sh
#
# Configuration API for the fwrbm firewall suite
#
# Maximilian Wilhelm <max@rfc2324.org>
#  -- Mon, 10 Apr 2006 15:26:34 +0200
#

# VLAN_DB should have been exportet before.
if [ -z "${VLAN_DB}" ]; then
	VLAN_DB="/etc/fwrbm/fwrbm.vlan.db"
fi

if [ ! -s "${VLAN_DB}" ]; then
	echo "Error: Vlan database \"${VLAN_DB}\" does not exists or is empty!" >&2
	exit 1
fi

##
# Return a space separated list for vlan IDs
function getVlans() { #{{{
	echo `grep -v '^#\|^$' "${VLAN_DB}" | cut -d: -f1`
} #}}}

##
# Get a comma separated list of the networks for vlan <id>
function getVlanNetwork() { # getVlanNetwork <id> #{{{
	if [ "$1" ]; then
		vlan="$1";
		echo `grep ^${vlan}: "${VLAN_DB}" | cut -d: -f4`
	else
		echo "getVlanNetwork: No parameter given!" >&2
	fi
} #}}}

##
# Return '0' if vlan <id> is a filtered vlan, '1' else
function vlanIsFiltered() { # vlanIsFiltered <id>  #{{{
	if [ "$1" ]; then
		vlan="$1"
		if [ `grep ^${vlan}: "${VLAN_DB}" | cut -d: -f2` == 'filtered' ]; then
			return 0
		fi
	else
		echo "vlanIsFiltered: No parameter given!" >&2
	fi

	return 1
} #}}}

##
# Return '0' if vlan <id> is a trusted vlan, '1' else
function vlanIsTrusted() {  # vlanIsTrusted <id>  #{{{
	if [ "$1" ]; then
		vlan="$1"
		if [ `grep ^${vlan}: "${VLAN_DB}" | cut -d: -f3` == 'trusted' ]; then
			return 0
		fi
	else
		echo "vlanIsTrusted: No parameter given!" >&2
	fi

	return 1

} #}}}

# vim:foldmethod=marker:ft=sh
