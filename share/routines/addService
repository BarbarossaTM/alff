#!/bin/sh
#
# addService <servicename>
#
# Maximilian Wilhelm <mwilhelm@math.uni-paderborn.de>
#  -- Thu, 08 Dec 2005 15:42:50 +0100
#

BASE_DIR="/firewall/current"
CONFIG_DIR="/etc/fwrbm"
SERVICES_D="${CONFIG_DIR}/services.d"


if [ -z "${1}" ]; then
	echo "Usage: fwrbm addService [service]" >&2
	echo "Beware, that service has to be max. 21 chars."
	exit 1
fi

SERVICE="${1}"

if [ `echo ${SERVICE} | wc -c` -gt 21 ]; then
	echo "Error: Given service name is to long. Max. 21 chars allowed."
	exit 1
fi

SERVERS=""
PORTS=""

##
# Check for service dir
if [ ! -d "${SERVICES_D}" ]; then
	echo "Error: services.d directory ${SERVICES_D} does not exists." >&2
	exit 1
fi

if [ -f "${SERVICES_D}/${SERVICE}" ]; then
	echo "Error: Configuration for service ${SERVICE} already exists." >&2
	exit 1
fi

##
# Let's go
echo -n "Enter a space separated list of host names: "
read SERVER_NAMES

echo -n "Enter a space separated list of port/proto (e.g 80/tcp): "
read PORTS

echo -n "Should this service be reachable from all internal networks? (yes/no): "
read ALLOW_FROM_INTERNAL_NETWORKS

echo -n "Should this service be accessable from all the world[tm]? (yes/no): "
read ALLOW_FROM_WORLD


if [ "${SERVER_NAMES}" -a "${PORTS}" -a "${ALLOW_FROM_INTERNAL_NETWORKS}" -a "${ALLOW_FROM_WORLD}" ]; then

	# Check ports/protocols
	for service_port in ${PORTS}; do
		port="${service_port%%/*}"              # get value before /
		protocol="${service_port##*/}"          # get value after /

		# Check if port is a 1 to 5 char long numeric value
		if echo ${port} | grep -q "^[0-9]\{1,5\}$"; then
			if [ "${port}" -gt 65536 ]; then
				echo "Error: Port ${port} is invalid." >&2
				exit 1
			fi
		else
			echo "Error: Port ${port} is not a vaild ip port number." >&2
			exit 1
		fi

		# Check if protocol is in {tcp,udp]
		if ! echo ${protocol} | grep -q "^tcp$\|^udp$"; then
			echo "Error: Unknown protocol ${protocol}, has to be tcp or udp." >&2
			exit 1
		fi
	done
	
	# resolv hostnames to IPs

	for servername in ${SERVER_NAMES}; do
		if [ "${servername}" == 'any' ]; then
			SERVERS="0.0.0.0/0.0.0.0"
		else
			HOST_OUTPUT=""
			HOST_OUTPUT=`host $servername 2>/dev/null | grep "has address"`

			if [ "${HOST_OUTPUT}" ]; then
				SERVERS="${SERVERS} `echo $HOST_OUTPUT | awk '{ print $4 }'`"
			else
				echo "Error: Host ${servername} not found." >&2
				exit 1
			fi
		fi

	done

	if [ ! "${ALLOW_FROM_INTERNAL_NETWORKS}" == "yes" -a ! "${ALLOW_FROM_INTERNAL_NETWORKS}" == "no" ]; then
		echo "Error: You have to decide if this service should be reachable from internal network or not!"
		exit 1
	fi

	if [ ! "${ALLOW_FROM_WORLD}" == "yes" -a ! "${ALLOW_FROM_WORLD}" == "no" ]; then
		echo "Error: You have to decide if this service should be accessable world wide or not!"
		exit 1
	fi


	cat << EOSERVICE > "${SERVICES_D}/${SERVICE}"
#
# ${SERVICE} Servers
#

SERVERS="${SERVERS}"		# ${SERVER_NAMES}
PORTS="${PORTS}"

ALLOW_FROM_INTERNAL_NETWORKS="${ALLOW_FROM_INTERNAL_NETWORKS}"
ALLOW_FROM_WORLD="${ALLOW_FROM_WORLD}"

# vim:ft=sh:
EOSERVICE
else
	echo "You did not enter everything I asked you for... sorry." >&2
	exit 1
fi
