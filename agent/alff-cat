#!/usr/bin/env sh
#
# The Alff Cat
#
# alff Configuration Acceptor Tool
#
# Maximilian Wilhelm <max@rfc2324.org>
#  -- Thu, 25 May 2006 20:56:01 +0200
#

##
# ATTENTION:
# Do never ever add
#       || echo "FAILED!"
# anywhere in this tool, because we want 'set -e' do handle this case!!
set -e

# Try to load configuration
if [ -f /etc/alff/alff-agent.conf ]; then
	. /etc/alff/alff-agent.conf
fi

# If there is no config, use defaults
if [ -z "${RULES_DIR}" ]; then
	RULES_DIR="/var/cache/alff/rules"
	OLD_RULES_FILE="${RULES_DIR}/rules.dump"
	CURRENT_RULES_FILE="${RULES_DIR}/rules.current"
	DELETE_ME_FILE="${RULES_DIR}/.current_rules_dont_work"
	SLEEP_TIME=180
fi

MY_NAME="alff-cat"

# Check for root privileges
if [ `id -u` != 0 ]; then
	echo "Error: ${MY_NAME} has to be run as root!" >&2
	exit 1
fi

# Check args
if [ -z "${1}" ]; then
	echo "usage: ${MY_NAME} [ - | filename ]" >&2
	exit 1
fi

# Check if rules file is readable, if not reading from stdin
RULES_FILE="${1}"
if [ "${RULES_FILE}" != '-' ]; then
	if [ ! -r "${RULES_FILE}" ]; then
		echo "Error: Rules file ${RULES_FLIE} does not exist or is not readable!" >&2
		exit 1
	fi
fi

# Check for some needed binaries
for tool in iptables-save iptables-restore; do
	if ! command -v ${tool} >/dev/null; then
		echo "Error: '${tool}' is required by ${MY_NAME}, but was not found!" >&2
		exit 2
	fi
done

# Create rules backup dir, if not there
if [ ! -d "${RULES_DIR}" ]; then
	mkdir -p "${RULES_DIR}"
fi


##
# Ok, let´s go

echo "The Alff-cat awakes..."
# Save the current ruleset to $OLD_RULES_FILE
echo -n " 1. Dumping current ruleset to ${RULES_DIR}... "
iptables-save > "${OLD_RULES_FILE}" && echo "done."

# Save current rules to disk, to keep them over reboot
echo -n " 2. Saving new rules from ${RULES_FILE} to ${CURRENT_RULES_FILE}... "
cat "${RULES_FILE}" > "${CURRENT_RULES_FILE}" && echo "done."

# Just execute $CURRENTRULES_FILE
# The shell will handle both, a filename as parameter and
# reading command from stdin
echo -n " 3. Loading new rules from ${CURRENT_RULES_FILE}... "
sh "${CURRENT_RULES_FILE}" && echo "done."

# Wait for the admin to delete DELETE_ME_FILE
echo -n " 4. Wait ${SLEEP_TIME:-180} seconds for delete of the token..."
touch "${DELETE_ME_FILE}"
sleep ${SLEEP_TIME:-180} && echo "done."

# Do we have to do a restore?
if [ -f "${DELETE_ME_FILE}" ]; then
	# Oh, something went wrong... Let´s restore the old rules
	echo -n " Damn, alff-cat token has not been deleted, restoring old ruleset... "
	iptables -F
	iptables-restore < "${OLD_RULES_FILE}" && echo "done."
fi

echo "Have a nice day..."
